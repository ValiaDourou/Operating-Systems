#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <time.h>
#define shm_size 1024
#define N 2

int main()
{
clock_t start,end,total;
int shmid,shmid1;
key_t key=1235;
key_t key1=1234;
int *p;
int i,j;
int *shroot;

shmid=shmget(key,10*N*sizeof(int),0644|IPC_CREAT);
shmid1=shmget(key1,sizeof(int),0644|IPC_CREAT);

if((shmid<0)||(shmid1<0))
{
perror("shmget\n");
exit(1);
}

p=(int *)shmat(shmid,NULL,0);
*p=0;

for(i=1;i<=10*N;i++)
{
p[i]=i;
}

shroot=(int *)shmat(shmid1,NULL,0);
*shroot=0;


for(j=1;j<=N;j++)
{
pid_t pid;
pid=fork();
if(pid>0)
{
if(j==1)
{
start=clock();
}
if(j==N)
{
end=clock();
total = (double)(end - start) / CLOCKS_PER_SEC;
printf("Total time: %.8f\n",total);

}
continue;
}
else if (pid==0)
{
shmid = shmget(key, 10*N*sizeof(int), IPC_EXCL);
p = shmat(shmid, 0, SHM_RDONLY);
for(i=1; i<=10*N; i++)
{
*shroot=*shroot+p[i];
}
if(j==N)
{
printf("Total value: %d\n",*shroot);
}
break;
}
}

shmdt((void *) p);
return 0;
}
